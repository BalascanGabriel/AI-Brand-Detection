Ca prim pas, am reluat laboratorul 10 unde am creat serverul Sql si baza de date(tabela uploads), serviciile de storage accounts care stocheaza efectiv pozele trimise spre procesare si app service, hostul paginii web. 
In fisierul site.php am implementat partea de front-end, adica partea unde userul alege si trimite un fisier. Site.php cuprinde si sub-fisierele necesare in pasii urmatori. In partea de submit.php, verific daca a fost trimisa o cerere de tip POST prin apasarea butonului submit. Daca fisierul este o poza, o atasez temporal in directorul local poze/. Se afiseaza si un mesaj intuibil catre client daca acest pas a fost trecut cu succes. 
Pentru partea de procesare AI de catre serviciul oferit prin platforma Azure, am trimis o cerere POST prin REST API catre url-ul dat de cognitive service+"visualFeatures=Brands". Documentatia se gaseste la urmatorul url: https://docs.microsoft.com/en-us/azure/cognitive-services/computer-vision/concept-brand-detection .Rezulatul care este un json il pastrez in fisierul result.json de unde extrag dupa doar numele brand-ului, fara celelalte metadate ale procesarii.
La final, am creat in fisierul uploadblob.php un client pentru partea de storage la nivelul blob-ului si a containerului corespunzator. Link-ul catre poza uploadata se gaseste in blob storage unde impreuna cu timpul procesarii, cu numele pozei si numele brandului detectat sunt adaugate in baza de date.

Cazuri cand merge foarte bine: pentru brandurile vechi recunoaste in orice pozitie si unghi ( de exemplu tricoul cu microsoft) --> gray-shirt-logo
Cazuri cand merge prost: pentru branduri noi, spre exemplu recunoaste logo-ul facebook, dar nu instagram sau tesla --> insta, tesla
